     1 00000000                                 [FORMAT "WCOFF"]
     2 00000000                                 [INSTRSET "i486p"]
     3 00000000                                 [OPTIMIZE 1]
     4 00000000                                 [OPTION 1]
     5 00000000                                 [BITS 32]
     6 00000000                                 	EXTERN	_api_getlang
     7 00000000                                 	EXTERN	_api_initmalloc
     8 00000000                                 	EXTERN	_api_malloc
     9 00000000                                 	EXTERN	_api_openwin
    10 00000000                                 	EXTERN	_api_boxfilwin
    11 00000000                                 	EXTERN	_api_fopen
    12 00000000                                 	EXTERN	_api_fsize
    13 00000000                                 	EXTERN	_api_fread
    14 00000000                                 	EXTERN	_api_fclose
    15 00000000                                 	EXTERN	_api_getkey
    16 00000000                                 	EXTERN	_api_end
    17 00000000                                 	EXTERN	_api_putstrwin
    18 00000000                                 	EXTERN	_api_putstr0
    19 00000000                                 [FILE "info.c"]
    20                                          [SECTION .data]
    21 00000000                                 LC0:
    22 00000000 B8 F6 C8 CB D0 C5 CF A2 00      	DB	0xB8,0xF6,0xC8,0xCB,0xD0,0xC5,0xCF,0xA2,0x00
    23 00000009                                 LC1:
    24 00000009 69 6E 66 6F 2E 74 78 74 00      	DB	"info.txt",0x00
    25 00000012                                 LC2:
    26 00000012 46 69 6C 65 20 6E 6F 74 20 66   	DB	"File not found.",0x0A,0x00
       0000001C 6F 75 6E 64 2E 0A 00 
    27                                          [SECTION .text]
    28 00000000                                 	GLOBAL	_HariMain
    29 00000000                                 _HariMain:
    30 00000000 55                              	PUSH	EBP
    31 00000001 89 E5                           	MOV	EBP,ESP
    32 00000003 57                              	PUSH	EDI
    33 00000004 56                              	PUSH	ESI
    34 00000005 53                              	PUSH	EBX
    35 00000006 56                              	PUSH	ESI
    36 00000007 E8 [00000000]                   	CALL	_api_getlang
    37 0000000C E8 [00000000]                   	CALL	_api_initmalloc
    38 00000011 68 0000012C                     	PUSH	300
    39 00000016 E8 [00000000]                   	CALL	_api_malloc
    40 0000001B 68 [00000000]                   	PUSH	LC0
    41 00000020 6A FF                           	PUSH	-1
    42 00000022 68 000000C5                     	PUSH	197
    43 00000027 68 00000100                     	PUSH	256
    44 0000002C 50                              	PUSH	EAX
    45 0000002D E8 [00000000]                   	CALL	_api_openwin
    46 00000032 89 45 F0                        	MOV	DWORD [-16+EBP],EAX
    47 00000035 6A 07                           	PUSH	7
    48 00000037 68 000000BE                     	PUSH	190
    49 0000003C 68 000000FA                     	PUSH	250
    50 00000041 6A 1B                           	PUSH	27
    51 00000043 6A 06                           	PUSH	6
    52 00000045 50                              	PUSH	EAX
    53 00000046 E8 [00000000]                   	CALL	_api_boxfilwin
    54 0000004B 83 C4 30                        	ADD	ESP,48
    55 0000004E 68 [00000009]                   	PUSH	LC1
    56 00000053 E8 [00000000]                   	CALL	_api_fopen
    57 00000058 5B                              	POP	EBX
    58 00000059 89 C7                           	MOV	EDI,EAX
    59 0000005B 85 C0                           	TEST	EAX,EAX
    60 0000005D 74 7E                           	JE	L14
    61 0000005F                                 L2:
    62 0000005F 6A 00                           	PUSH	0
    63 00000061 57                              	PUSH	EDI
    64 00000062 E8 [00000000]                   	CALL	_api_fsize
    65 00000067 89 C3                           	MOV	EBX,EAX
    66 00000069 8D 40 0A                        	LEA	EAX,DWORD [10+EAX]
    67 0000006C 50                              	PUSH	EAX
    68 0000006D E8 [00000000]                   	CALL	_api_malloc
    69 00000072 57                              	PUSH	EDI
    70 00000073 53                              	PUSH	EBX
    71 00000074 89 C6                           	MOV	ESI,EAX
    72 00000076 50                              	PUSH	EAX
    73 00000077 E8 [00000000]                   	CALL	_api_fread
    74 0000007C 57                              	PUSH	EDI
    75 0000007D E8 [00000000]                   	CALL	_api_fclose
    76 00000082 83 C4 1C                        	ADD	ESP,28
    77 00000085 C6 44 33 01 00                  	MOV	BYTE [1+EBX+ESI*1],0
    78 0000008A 89 F0                           	MOV	EAX,ESI
    79 0000008C 80 3E 00                        	CMP	BYTE [ESI],0
    80 0000008F 89 F3                           	MOV	EBX,ESI
    81 00000091 74 10                           	JE	L9
    82 00000093 BE 0000001D                     	MOV	ESI,29
    83 00000098                                 L8:
    84 00000098 80 3B 0D                        	CMP	BYTE [EBX],13
    85 0000009B 74 1F                           	JE	L15
    86 0000009D                                 L5:
    87 0000009D 43                              	INC	EBX
    88 0000009E 80 3B 00                        	CMP	BYTE [EBX],0
    89 000000A1 75 F5                           	JNE	L8
    90 000000A3                                 L9:
    91 000000A3 6A 01                           	PUSH	1
    92 000000A5 E8 [00000000]                   	CALL	_api_getkey
    93 000000AA 5A                              	POP	EDX
    94 000000AB 83 F8 0A                        	CMP	EAX,10
    95 000000AE 75 F3                           	JNE	L9
    96 000000B0 8D 65 F4                        	LEA	ESP,DWORD [-12+EBP]
    97 000000B3 5B                              	POP	EBX
    98 000000B4 5E                              	POP	ESI
    99 000000B5 5F                              	POP	EDI
   100 000000B6 5D                              	POP	EBP
   101 000000B7 E9 [00000000]                   	JMP	_api_end
   102 000000BC                                 L15:
   103 000000BC 89 DA                           	MOV	EDX,EBX
   104 000000BE C6 03 00                        	MOV	BYTE [EBX],0
   105 000000C1 29 C2                           	SUB	EDX,EAX
   106 000000C3 50                              	PUSH	EAX
   107 000000C4 52                              	PUSH	EDX
   108 000000C5 6A 00                           	PUSH	0
   109 000000C7 56                              	PUSH	ESI
   110 000000C8 83 C6 10                        	ADD	ESI,16
   111 000000CB 6A 08                           	PUSH	8
   112 000000CD FF 75 F0                        	PUSH	DWORD [-16+EBP]
   113 000000D0 E8 [00000000]                   	CALL	_api_putstrwin
   114 000000D5 83 C4 18                        	ADD	ESP,24
   115 000000D8 8D 43 02                        	LEA	EAX,DWORD [2+EBX]
   116 000000DB EB C0                           	JMP	L5
   117 000000DD                                 L14:
   118 000000DD 68 [00000012]                   	PUSH	LC2
   119 000000E2 E8 [00000000]                   	CALL	_api_putstr0
   120 000000E7 E8 [00000000]                   	CALL	_api_end
   121 000000EC 59                              	POP	ECX
   122 000000ED E9 FFFFFF6D                     	JMP	L2
